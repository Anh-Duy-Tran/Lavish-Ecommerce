# Generated by Django 3.2.12 on 2022-03-29 10:04

from django.contrib.auth.hashers import make_password
from django.db import migrations

BATCH_SIZE = 10000


def update_app_tokens(apps, schema_editor):
    AppToken = apps.get_model("app", "AppToken")
    queryset = AppToken.objects.all()
    for batch_pks in queryset_in_batches(queryset):
        app_tokens = AppToken.objects.filter(pk__in=batch_pks)
        for app_token in app_tokens:
            app_token.token_last_4 = app_token.auth_token[-4:]
            app_token.auth_token = make_password(app_token.auth_token)

        AppToken.objects.bulk_update(app_tokens, ["auth_token", "token_last_4"])


def queryset_in_batches(queryset):
    """Slice a queryset into batches.

    Input queryset should be sorted be pk.
    """
    start_pk = 0

    while True:
        qs = queryset.filter(pk__gt=start_pk)[:BATCH_SIZE]
        pks = list(qs.values_list("pk", flat=True))

        if not pks:
            break

        yield pks

        start_pk = pks[-1]


class Migration(migrations.Migration):
    dependencies = [
        ("app", "0009_apptoken_token_last_4"),
    ]

    operations = [
        migrations.RunPython(update_app_tokens, migrations.RunPython.noop),
    ]
