import React from "react";

import { Montserrat } from "next/font/google";
import { ThemeProvider } from "./theme-prodiver";
import "./globals.css";
import { Navbar } from "@/components/Navbar";
import { Sidebar } from "@/components/Sidebar";
import { AuthProvider } from "@/context/AuthProvider";
import { MessageModal } from "@/components/MessageModal";
import { getClient } from "@/lib/graphql";
import CategoryStoreInitializer from "@/hooks/CategoryStoreInitializer";
import { CategoriesType, useCategoryStore } from "@/context/useCategoryStore";
import { FetchCategoriesDocument } from "@/gql/graphql";
import { getServerSession } from "next-auth";
import { options } from "../api/auth/[...nextauth]/options";
import { getCart } from "@/actions/cartActions/getCart";
import { useCartStore } from "@/context/useCartStore";
import CartStoreInitializer from "@/hooks/CartStoreInitializer";
import GuestCartStoreInitializer from "@/hooks/GuestCartStoreInitializer";

export const font = Montserrat({
  weight: ["200", "400", "700"],
  subsets: ["latin"],
});

export const metadata = {
  title: "LAVISH",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  params: { lang: string };
}

export default async function RootLayout({
  children,
  params,
}: RootLayoutProps) {
  const { lang } = params;
  const session = await getServerSession(options);

  const fetchedCategories = (
    await getClient().query(FetchCategoriesDocument, { lang })
  ).data?.categories?.categoriesCollection?.items;

  useCategoryStore.setState({
    categories: fetchedCategories as CategoriesType,
  });

  let userCart = undefined;
  if (session) {
    userCart = await getCart();
    if (userCart) {
      useCartStore.setState({ cart: userCart });
    } else {
      // handle this error
      console.log("some thing wrong");
    }
  }

  return (
    <html lang="en">
      <body>
        <main className={font.className}>
          <ThemeProvider attribute="class" defaultTheme="light" enableSystem>
            <AuthProvider>
              <CategoryStoreInitializer
                categories={fetchedCategories as CategoriesType}
              />
              {session ? <CartStoreInitializer cart={userCart} /> : null}
              <GuestCartStoreInitializer />
              <Sidebar />
              <Navbar />
              {children}
              <MessageModal />
            </AuthProvider>
          </ThemeProvider>
        </main>
      </body>
    </html>
  );
}

export async function generateStaticParams() {
  return [{ lang: "en" }, { lang: "vi" }];
}
